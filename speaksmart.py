import logging
import os
# import threading # threading —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ health_checker
# from http.server import BaseHTTPRequestHandler, HTTPServer # –≠—Ç–∏ –∏–º–ø–æ—Ä—Ç—ã –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã –∑–¥–µ—Å—å
# from urllib.parse import urlparse # –≠—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω –∑–¥–µ—Å—å

# --- –ò–ú–ü–û–†–¢–´ TELEGRAM ---
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
# ReplyKeyboardMarkup –∏ KeyboardButton –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ, –Ω–æ –∏–º–ø–æ—Ä—Ç –º–æ–∂–µ—Ç –æ—Å—Ç–∞—Ç—å—Å—è
from telegram import ReplyKeyboardMarkup, KeyboardButton 
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    ConversationHandler,
    CallbackQueryHandler
)

# --- –ò–ú–ü–û–†–¢–´ –ù–ê–®–ò–• –ú–û–î–£–õ–ï–ô ---
import gemini_api 
from health_checker import start_health_check_server_in_thread # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ –º–æ–¥—É–ª—è

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
GEMINI_API_KEY = os.environ.get("GEMINI_API_KEY")

# --- –ö–û–ù–°–¢–ê–ù–¢–´ –î–õ–Ø –°–û–°–¢–û–Ø–ù–ò–ô –î–ò–ê–õ–û–ì–ê ---
GET_TEXT_FOR_CORRECTION, CHOOSE_STYLE, DESCRIBE_ADDRESSEE, POST_PROCESSING_MENU = range(4)

# --- –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_name = update.effective_user.first_name
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
        "–Ø SpeakSmartBot ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤. "
        "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –æ–Ω–∏ –∑–≤—É—á–∞–ª–∏ –±–æ–ª–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ, –≤–µ–∂–ª–∏–≤–æ –∏–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É —Å—Ç–∏–ª—é.\n\n"
        "–ß—Ç–æ —è —É–º–µ—é:\n"
        "üîπ –ü—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–≤–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.\n"
        "üîπ –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å –≤—ã–±–æ—Ä —Å—Ç–∏–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ–ª–æ–≤–æ–π, –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π, —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π).\n"
        "üîπ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å—Ç–∏–ª—å, –µ—Å–ª–∏ —Ç—ã –æ–ø–∏—à–µ—à—å –∞–¥—Ä–µ—Å–∞—Ç–∞.\n"
        "üîπ –ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è, —Ç—ã —Å–º–æ–∂–µ—à—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–¥–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –º—è–≥—á–µ –∏–ª–∏ —Å—Ç—Ä–æ–∂–µ), —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞–Ω–æ–≤–æ –∏–ª–∏ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º.\n\n"
        "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å?"
    )
    keyboard = [[InlineKeyboardButton("–£–ª—É—á—à–∏—Ç—å —Ç–µ–∫—Å—Ç üìù", callback_data="start_correction")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def request_text_for_correction(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å."
    )
    try:
        await query.edit_message_reply_markup(reply_markup=None)
    except Exception as e:
        logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    return GET_TEXT_FOR_CORRECTION

async def received_text_for_correction(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_message = update.message.text
    logger.info(f"–ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç chat_id {update.effective_chat.id}: '{user_message}'")
    context.user_data['text_to_correct'] = user_message
    context.user_data.pop('chosen_style', None)
    context.user_data.pop('addressee_description', None)
    context.user_data.pop('last_gemini_response', None)

    keyboard = [
        [InlineKeyboardButton("–î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å", callback_data="style_business")],
        [InlineKeyboardButton("–£—á–µ–±–Ω—ã–π —Å—Ç–∏–ª—å", callback_data="style_academic")],
        [InlineKeyboardButton("–õ–∏—á–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ", callback_data="style_personal")],
        [InlineKeyboardButton("–£–ø—Ä–æ—â—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç", callback_data="style_simplified")],
        [InlineKeyboardButton("–Ø —Å–∞–º —É–∫–∞–∂—É –∞–¥—Ä–µ—Å–∞—Ç–∞", callback_data="style_auto")], 
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        f"–ü–æ–Ω—è–ª —Ç–µ–±—è! –ü–æ–ª—É—á–∏–ª —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç (–ø–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤): \"{user_message[:50]}...\"\n\n"
        "–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –¥–ª—è –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è:",
        reply_markup=reply_markup
    )
    return CHOOSE_STYLE

async def _send_post_processing_menu(update_or_query, context: ContextTypes.DEFAULT_TYPE, response_text: str, message_prefix: str):
    context.user_data['last_gemini_response'] = response_text 
    post_process_keyboard_inline = [
        [
            InlineKeyboardButton("–ú—è–≥—á–µ", callback_data="adjust_softer"),
            InlineKeyboardButton("–ñ–µ—Å—Ç—á–µ", callback_data="adjust_harder"),
            InlineKeyboardButton("–§–æ—Ä–º–∞–ª—å–Ω–µ–µ", callback_data="adjust_more_formal"),
        ],
        [
            InlineKeyboardButton("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="regenerate_text"),
            InlineKeyboardButton("–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç", callback_data="start_new_text"),
        ]
    ]
    reply_markup_inline = InlineKeyboardMarkup(post_process_keyboard_inline)
    message_to_send = f"{message_prefix}\n\n{response_text}\n\n–ö–∞–∫ —Ç–µ–±–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç? –ú–æ–∂–µ–º –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å:"
    
    try:
        if isinstance(update_or_query, CallbackQuery):
            if update_or_query.message:
                await context.bot.edit_message_text(
                    text=message_to_send,
                    chat_id=update_or_query.message.chat_id,
                    message_id=update_or_query.message.message_id,
                    reply_markup=reply_markup_inline
                )
            else:
                logger.error("CallbackQuery –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç message –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
                await context.bot.send_message(chat_id=update_or_query.from_user.id, text=message_to_send, reply_markup=reply_markup_inline)
        elif isinstance(update_or_query, Update) and update_or_query.message:
            await update_or_query.message.reply_text(text=message_to_send, reply_markup=reply_markup_inline)
        else:
            logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —á–∞—Ç –≤ _send_post_processing_menu: {type(update_or_query)}")
            if context.update and context.update.effective_chat:
                 await context.bot.send_message(chat_id=context.update.effective_chat.id, text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ _send_post_processing_menu: {e}", exc_info=True)
        chat_id_to_notify = None
        if isinstance(update_or_query, CallbackQuery): chat_id_to_notify = update_or_query.from_user.id
        elif isinstance(update_or_query, Update) and update_or_query.effective_chat: chat_id_to_notify = update_or_query.effective_chat.id
        if chat_id_to_notify: await context.bot.send_message(chat_id=chat_id_to_notify, text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –º–µ–Ω—é –¥–æ—Ä–∞–±–æ—Ç–∫–∏.")

async def style_chosen(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    style_choice = query.data
    context.user_data['chosen_style'] = style_choice 
    context.user_data.pop('addressee_description', None) 
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {query.from_user.id} –≤—ã–±—Ä–∞–ª —Å—Ç–∏–ª—å: {style_choice}")
    text_to_correct = context.user_data.get('text_to_correct')

    if not text_to_correct:
        await query.edit_message_text(text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ: /start")
        return ConversationHandler.END

    if style_choice == "style_auto":
        await query.edit_message_text(
            text="–¢—ã –≤—ã–±—Ä–∞–ª —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å–∞—Ç–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.\n\n"
                 "–ß—Ç–æ–±—ã —è –º–æ–≥ –ª—É—á—à–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏ –∫—Ä–∞—Ç–∫–æ, –∫–æ–º—É –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ "
                 "(–Ω–∞–ø—Ä–∏–º–µ—Ä: '–Ω–∞—á–∞–ª—å–Ω–∏–∫—É', '–±–ª–∏–∑–∫–æ–º—É –¥—Ä—É–≥—É', '–∫–ª–∏–µ–Ω—Ç—É', '—É—á–∏—Ç–µ–ª—é', '–≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –∏–Ω—Å—Ç–∞–Ω—Ü–∏—é')."
        )
        return DESCRIBE_ADDRESSEE
    
    await query.edit_message_text(text=f"–¢—ã –≤—ã–±—Ä–∞–ª —Å—Ç–∏–ª—å: {style_choice}. –ú–∏–Ω—É—Ç–æ—á–∫—É, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–≤–æ–π —Ç–µ–∫—Å—Ç...")
    
    style_prompt_instruction = ""
    if style_choice == "style_business": 
        style_prompt_instruction = """–ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—è—Å—å —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –¥–µ–ª–æ–≤–æ–≥–æ —Å—Ç–∏–ª—è:
1. –¢–æ–Ω: –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π, —Å—É—Ö–æ–π, –±–µ–∑—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π.
2. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: –æ–±–µ—Å–ø–µ—á—å —á—ë—Ç–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –ª–æ–≥–∏–∫—É –∏–∑–ª–æ–∂–µ–Ω–∏—è, –∏–∑–±–µ–≥–∞–π –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤ –∏ '–≤–æ–¥—ã'.
3. –õ–µ–∫—Å–∏–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—É—é –ª–µ–∫—Å–∏–∫—É, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω—è–π —É–º–µ—Å—Ç–Ω—ã–µ —Ä–µ—á–µ–≤—ã–µ –∫–ª–∏—à–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´—Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏¬ª, ¬´–ø—Ä–æ—Å–∏–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å¬ª, ¬´–¥–æ–≤–æ–¥–∏–º –¥–æ –≤–∞—à–µ–≥–æ —Å–≤–µ–¥–µ–Ω–∏—è¬ª).
4. –ò—Å–∫–ª—é—á–∏—Ç—å: –ø—Ä–æ—Å—Ç–æ—Ä–µ—á–∏—è, –∂–∞—Ä–≥–æ–Ω, –¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å, —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω—ã–µ –æ—Ü–µ–Ω–æ—á–Ω—ã–µ —Å—É–∂–¥–µ–Ω–∏—è –∏ –ª—é–±—É—é –∏–∑–ª–∏—à–Ω—é—é —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å."""
    elif style_choice == "style_academic": 
        style_prompt_instruction = """–ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—è—Å—å —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —É—á–µ–±–Ω–æ–≥–æ —Å—Ç–∏–ª—è:
1. –¢–æ–Ω: –≤–µ–∂–ª–∏–≤—ã–π, —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π, –Ω–æ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π, —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º—É–ª—ã –≤–µ–∂–ª–∏–≤–æ—Å—Ç–∏ —Ç–∏–ø–∞ ¬´–î–æ–±—Ä—ã–π –¥–µ–Ω—å¬ª, ¬´–ü—Ä–æ—à—É —É—Ç–æ—á–Ω–∏—Ç—å¬ª, ¬´–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –æ—Ç–≤–µ—Ç¬ª).
2. –Ø—Å–Ω–æ—Å—Ç—å –∏ –ª–æ–≥–∏–∫–∞: –æ–±–µ—Å–ø–µ—á—å —á—ë—Ç–∫—É—é –∏ –ª–æ–≥–∏—á–Ω—É—é —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É –º—ã—Å–ª–µ–π, –∞–∫—Ü–µ–Ω—Ç–∏—Ä—É–π –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —è—Å–Ω–æ—Å—Ç–∏ –∏–∑–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–π –æ–±–æ—Ä–æ—Ç—ã ¬´–≤ —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º, –ø—Ä–µ–¥–ª–∞–≥–∞—é‚Ä¶¬ª, ¬´—Å—á–∏—Ç–∞—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º —É—Ç–æ—á–Ω–∏—Ç—å‚Ä¶¬ª).
3. –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: –º–∏–Ω–∏–º—É–º '–≤–æ–¥—ã' –∏ –º–∞–∫—Å–∏–º—É–º —Å–º—ã—Å–ª–∞.
4. –ò—Å–∫–ª—é—á–∏—Ç—å: –∂–∞—Ä–≥–æ–Ω, —Ñ–∞–º–∏–ª—å—è—Ä–Ω–æ—Å—Ç—å, –∏–∑–ª–∏—à–Ω—é—é —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–µ—É–º–µ—Å—Ç–Ω—ã–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è.
5. –û—Ç–ª–∏—á–∏–µ –æ—Ç –¥–µ–ª–æ–≤–æ–≥–æ —Å—Ç–∏–ª—è: —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º—è–≥—á–µ –∏ –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–º, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∏ —ç—Ç–æ–º —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ –∑–≤—É—á–∞–Ω–∏–µ –∏ —É–≤–∞–∂–µ–Ω–∏–µ."""
    elif style_choice == "style_personal": 
        style_prompt_instruction = """–ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—è—Å—å —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —Å—Ç–∏–ª—è –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è:
1. –¶–µ–ª—å: —Å–æ–∑–¥–∞—Ç—å –¥—É—à–µ–≤–Ω–æ–µ –∏ —Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –¥–ª—è –±–ª–∏–∑–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (–¥—Ä—É–≥–∞, –ø–∞—Ä—Ç–Ω–µ—Ä–∞, —á–ª–µ–Ω–∞ —Å–µ–º—å–∏).
2. –≠–º–æ—Ü–∏–∏: –ø–æ–º–æ–≥–∏ –¥–µ–ª–∏–∫–∞—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É –≤—ã—Ä–∞–∑–∏—Ç—å —ç–º–æ—Ü–∏–∏, –∫–∞–∫ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ª—é–±–æ–≤—å, –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å), —Ç–∞–∫ –∏ —Å–ª–æ–∂–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±–∏–¥–∞, —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ).
3. –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–µ, –ø–æ–º–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —á—Ç–æ–±—ã –º—ã—Å–ª—å –±—ã–ª–∞ –ø–æ–Ω—è—Ç–Ω–∞.
4. –°—Ç–∏–ª—å —Ä–µ—á–∏: —Ä–µ—á—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π, —á–∏—Å—Ç–æ–π –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ–π, —á–µ–º –æ–±—ã—á–Ω–∞—è —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è. "–ú—è–≥–∫–∏–µ" —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ –∏ —É–º–µ—Å—Ç–Ω—ã–µ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É —ç–º–æ–¥–∑–∏ –¥–æ–ø—É—Å—Ç–∏–º—ã.
5. –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, –ø—Ä–∏–∑–Ω–∞–Ω–∏—è, —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –≤ —Å–ø–æ—Ä–µ, –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å–≤–æ–µ–π –ø–æ–∑–∏—Ü–∏–∏ –±–µ–∑ –∂–µ–ª–∞–Ω–∏—è –æ–±–∏–¥–µ—Ç—å –∏–ª–∏, –Ω–∞–æ–±–æ—Ä–æ—Ç, –¥–ª—è —Ç–≤–µ—Ä–¥–æ–≥–æ –µ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è."""
    elif style_choice == "style_simplified": 
        style_prompt_instruction = """—Å–ª–µ–¥—É—è –ø—Ä–∏–Ω—Ü–∏–ø–∞–º —É–ø—Ä–æ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞:
1. –¶–µ–ª—å: –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –ø–æ–Ω—è—Ç–Ω–æ–µ, –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–±—Ä–∞–≤ –∏–∑–ª–∏—à–Ω—é—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å.
2. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: –∏–∑–±–∞–≤—å—Å—è –æ—Ç —Ç—è–∂–µ–ª—ã—Ö –∏ –Ω–∞–≥—Ä–æ–º–æ–∂–¥–µ–Ω–Ω—ã—Ö –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∏ "—É—á–∏—Ç—ã–≤–∞—è –∏–∑–ª–æ–∂–µ–Ω–Ω–æ–µ, –º–æ–∂–Ω–æ –∑–∞–∫–ª—é—á–∏—Ç—å" –Ω–∞ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—É—é —Ñ—Ä–∞–∑—É).
3. –°–ª–æ–≤–∞—Ä—å: –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Å—Ç—ã–µ —Å–ª–æ–≤–∞, –∏–∑–±–µ–≥–∞–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∏–ª–∏ —Å–ª–æ–∂–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å–º—ã—Å–ª–∞.
4. –°—Ç—Ä—É–∫—Ç—É—Ä–∞: —Å—Ç—Ä–µ–º–∏—Å—å –∫ –∫–æ—Ä–æ—Ç–∫–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –∏ –ø–æ–Ω—è—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∏–∑–ª–æ–∂–µ–Ω–∏—è –º—ã—Å–ª–µ–π.
5. –†–µ–∑—É–ª—å—Ç–∞—Ç: —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º, —á–µ–ª–æ–≤–µ—á–Ω—ã–º, –ª–µ–≥–∫–∏–º –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è, –ø—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—è—è –≤—Å—é –∫–ª—é—á–µ–≤—É—é —Å—É—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    
    prompt_for_gemini = (
        f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç. "
        f"–ü—Ä–∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ {style_prompt_instruction}. "
        f"–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –ø–æ–ª–Ω—ã–π —Å–º—ã—Å–ª –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ê–ë–°–û–õ–Æ–¢–ù–û –¢–û–ß–ù–û, –±–µ–∑ –º–∞–ª–µ–π—à–∏—Ö –∏—Å–∫–∞–∂–µ–Ω–∏–π, –ø–æ—Ç–µ—Ä—å –∫–ª—é—á–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–º—ã—Å–ª–∞. "
        f"–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è: \"{text_to_correct}\"\n\n"
        f"–¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –∏ –¢–û–õ–¨–ö–û –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. "
        f"–ù–ï –î–û–ë–ê–í–õ–Ø–ô –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π, –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π, –æ–±—ä—è—Å–Ω–µ–Ω–∏–π —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π, –∏–∑–≤–∏–Ω–µ–Ω–∏–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–π –∏–ª–∏ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥—Ä—É–≥–∏—Ö —Ñ—Ä–∞–∑, –∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."
    )
    logger.info(f"–ü—Ä–æ–º–ø—Ç –¥–ª—è Gemini (–ø—Ä—è–º–æ–π —Å—Ç–∏–ª—å): {prompt_for_gemini}")

    if not GEMINI_API_KEY:
        logger.error("GEMINI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è style_chosen.")
        await context.bot.send_message(chat_id=update.effective_chat.id, text="–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–∏–ª—è. –ö–ª—é—á API –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return ConversationHandler.END
    
    try:
        await context.bot.send_chat_action(chat_id=update.effective_chat.id, action="typing")
        response_text = gemini_api.ask_gemini(prompt_for_gemini, GEMINI_API_KEY)
        await _send_post_processing_menu(query, context, response_text, "–í–æ—Ç –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
        logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç Gemini (—Å—Ç–∏–ª—å {style_choice}): {response_text}. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –º–µ–Ω—é –ø–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∏.")
        return POST_PROCESSING_MENU
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ gemini_api.ask_gemini –¥–ª—è —Å—Ç–∏–ª—è {style_choice}: {e}", exc_info=True)
        error_message_text = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        if query.message: await context.bot.edit_message_text(text=error_message_text, chat_id=query.message.chat_id, message_id=query.message.message_id)
        else: await context.bot.send_message(chat_id=update.effective_chat.id, text=error_message_text)
        return ConversationHandler.END

async def addressee_described(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    addressee_description = update.message.text
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞—Ç–∞ –æ—Ç chat_id {update.effective_chat.id}: '{addressee_description}'")
    context.user_data['addressee_description'] = addressee_description
    context.user_data['chosen_style'] = 'style_auto' # –Ø–≤–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º, —á—Ç–æ —ç—Ç–æ –±—ã–ª –∞–≤—Ç–æ-—Å—Ç–∏–ª—å
    text_to_correct = context.user_data.get('text_to_correct')

    if not text_to_correct:
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ: /start")
        return ConversationHandler.END

    await update.message.reply_text("–ü–æ–Ω—è–ª —Ç–µ–±—è! –ü–æ–¥–±–∏—Ä–∞—é —Å—Ç–∏–ª—å –∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É—é —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–≤–æ–µ–≥–æ –∞–¥—Ä–µ—Å–∞—Ç–∞. –ú–∏–Ω—É—Ç–æ—á–∫—É...")
    await context.bot.send_chat_action(chat_id=update.effective_chat.id, action="typing")
    
    prompt_for_gemini = (
        f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äì –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–æ–±—Ä–∞–≤ –¥–ª—è –Ω–µ–≥–æ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å—Ç–∏–ª—å, "
        f"—É—á–∏—Ç—ã–≤–∞—è, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ: '{addressee_description}'.\n"
        f"–û—Ä–∏–µ–Ω—Ç–∏—Ä—É–π—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∏–ª–∏ –∏ –∏—Ö –∫–ª—é—á–µ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n"
        f"1. –î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å: –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π, —Å—É—Ö–æ–π, –±–µ–∑—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω, —á—ë—Ç–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –ª–æ–≥–∏–∫–∞, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –≤–æ–∑–º–æ–∂–Ω—ã –∫–ª–∏—à–µ.\n"
        f"2. –£—á–µ–±–Ω—ã–π —Å—Ç–∏–ª—å: –≤–µ–∂–ª–∏–≤—ã–π, —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ-–¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π, —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏, —á—ë—Ç–∫–∞—è –∏ –ª–æ–≥–∏—á–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –º—ã—Å–ª–µ–π, –º–∏–Ω–∏–º—É–º '–≤–æ–¥—ã', –±–µ–∑ –∂–∞—Ä–≥–æ–Ω–∞ –∏ –∏–∑–ª–∏—à–Ω–∏—Ö —ç–º–æ—Ü–∏–π.\n"
        f"3. –°—Ç–∏–ª—å –ª–∏—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è: –¥—É—à–µ–≤–Ω—ã–π, –ø–æ–º–æ–≥–∞–µ—Ç –¥–µ–ª–∏–∫–∞—Ç–Ω–æ –≤—ã—Ä–∞–∑–∏—Ç—å —ç–º–æ—Ü–∏–∏, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, –Ω–æ —Ç–æ—á–Ω—ã–π –∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–π, –¥–æ–ø—É—Å—Ç–∏–º—ã —É–º–µ—Å—Ç–Ω—ã–µ —ç–º–æ–¥–∑–∏.\n"
        f"4. –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: –ø–æ–Ω—è—Ç–Ω—ã–π, –∫–æ—Ä–æ—Ç–∫–∏–π, –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π, —Å–æ—Ö—Ä–∞–Ω—è—é—â–∏–π —Å—É—Ç—å.\n\n"
        f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞—Ç–∞, –≤—ã–±–µ—Ä–∏ –Ω–∞–∏–ª—É—á—à–∏–π –∏–∑ —ç—Ç–∏—Ö —Å—Ç–∏–ª–µ–π (–∏–ª–∏ –∏—Ö —É–º–µ—Å—Ç–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ) –∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–∏–º. "
        f"–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –ø–æ–ª–Ω—ã–π —Å–º—ã—Å–ª –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ê–ë–°–û–õ–Æ–¢–ù–û –¢–û–ß–ù–û, –±–µ–∑ –º–∞–ª–µ–π—à–∏—Ö –∏—Å–∫–∞–∂–µ–Ω–∏–π, –ø–æ—Ç–µ—Ä—å –∫–ª—é—á–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–º—ã—Å–ª–∞.\n\n" 
        f"–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: \"{text_to_correct}\"\n\n"
        f"–¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –∏ –¢–û–õ–¨–ö–û –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. "
        f"–ù–ï –î–û–ë–ê–í–õ–Ø–ô –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π, –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π, –æ–±—ä—è—Å–Ω–µ–Ω–∏–π —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π, –∏–∑–≤–∏–Ω–µ–Ω–∏–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–π –∏–ª–∏ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥—Ä—É–≥–∏—Ö —Ñ—Ä–∞–∑, –∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."
    )
    logger.info(f"–ü—Ä–æ–º–ø—Ç –¥–ª—è Gemini (–∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ): {prompt_for_gemini}")

    if not GEMINI_API_KEY:
        logger.error("GEMINI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è addressee_described.")
        await update.message.reply_text("–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∏–ª—è. –ö–ª—é—á API –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return ConversationHandler.END
        
    try:
        response_text = gemini_api.ask_gemini(prompt_for_gemini, GEMINI_API_KEY)
        await _send_post_processing_menu(update, context, response_text, f"–í–æ—Ç –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç (—Å—Ç–∏–ª—å –ø–æ–¥–æ–±—Ä–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è '{addressee_description}'):")
        logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç Gemini (–∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è '{addressee_description}'): {response_text}. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –º–µ–Ω—é –ø–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∏.")
        return POST_PROCESSING_MENU
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ gemini_api.ask_gemini –¥–ª—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: {e}", exc_info=True)
        await update.message.reply_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Å—Ç–∏–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return ConversationHandler.END

async def post_processing_action(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    action_choice = query.data
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {query.from_user.id} –≤—ã–±—Ä–∞–ª –¥–µ–π—Å—Ç–≤–∏–µ: {action_choice}")

    if action_choice == "start_new_text":
        context.user_data.clear()
        await query.edit_message_text(text="–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å.")
        return GET_TEXT_FOR_CORRECTION

    last_response = context.user_data.get('last_gemini_response')
    original_text = context.user_data.get('text_to_correct')
    chosen_style_callback = context.user_data.get('chosen_style') 
    addressee_description_if_auto = context.user_data.get('addressee_description')

    prompt_for_gemini = ""
    final_message_prefix = "" 

    if action_choice in ["adjust_softer", "adjust_harder", "adjust_more_formal"]:
        if not last_response:
            logger.warning(f"–ù–µ –Ω–∞–π–¥–µ–Ω last_gemini_response –¥–ª—è {action_choice}")
            await query.edit_message_text(text="–û—à–∏–±–∫–∞: —Ç–µ–∫—Å—Ç –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ: /start")
            return ConversationHandler.END

        instruction_verb = ""
        modification_instruction = ""
        if action_choice == "adjust_softer":
            instruction_verb = "—Å–º—è–≥—á–µ–Ω–∏–µ —Ç–æ–Ω–∞"
            modification_instruction = "–°–¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –Ω–µ–º–Ω–æ–≥–æ –º—è–≥—á–µ –ø–æ —Ç–æ–Ω—É"
        elif action_choice == "adjust_harder":
            instruction_verb = "—É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∂–µ—Å—Ç–∫–æ—Å—Ç–∏/–Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ —Ç–æ–Ω–∞"
            modification_instruction = "–°–¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –Ω–µ–º–Ω–æ–≥–æ –∂–µ—Å—Ç—á–µ –∏–ª–∏ –±–æ–ª–µ–µ –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–º –ø–æ —Ç–æ–Ω—É"
        elif action_choice == "adjust_more_formal":
            instruction_verb = "—É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç–∏–ª—è"
            modification_instruction = "–°–¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –µ—â–µ –±–æ–ª–µ–µ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º"
        
        await query.edit_message_text(text=f"–ü—Ä–∏–º–µ–Ω—è—é '{instruction_verb}'... –ú–∏–Ω—É—Ç–æ—á–∫—É.")
        prompt_for_gemini = (
            f"{modification_instruction}, –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –ø–æ–ª–Ω—ã–π —Å–º—ã—Å–ª —Ç–µ–∫—Å—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ê–ë–°–û–õ–Æ–¢–ù–û –¢–û–ß–ù–û, –±–µ–∑ –º–∞–ª–µ–π—à–∏—Ö –∏—Å–∫–∞–∂–µ–Ω–∏–π –∏–ª–∏ –ø–æ—Ç–µ—Ä—å –∫–ª—é—á–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. "
            f"–í–æ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏: \"{last_response}\"\n\n"
            f"–¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –∏ –¢–û–õ–¨–ö–û –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. "
            f"–ù–ï –î–û–ë–ê–í–õ–Ø–ô –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π, –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π, –æ–±—ä—è—Å–Ω–µ–Ω–∏–π —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π, –∏–∑–≤–∏–Ω–µ–Ω–∏–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–π –∏–ª–∏ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥—Ä—É–≥–∏—Ö —Ñ—Ä–∞–∑, –∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."
        )
        final_message_prefix = f"–¢–µ–∫—Å—Ç –ø–æ—Å–ª–µ '{instruction_verb}':"

    elif action_choice == "regenerate_text":
        if not original_text:
            logger.warning(f"–ù–µ –Ω–∞–π–¥–µ–Ω original_text –¥–ª—è regenerate_text")
            await query.edit_message_text(text="–û—à–∏–±–∫–∞: –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ: /start")
            return ConversationHandler.END

        await query.edit_message_text(text="–ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö... –ú–∏–Ω—É—Ç–æ—á–∫—É.")
        
        if chosen_style_callback == "style_auto" and addressee_description_if_auto:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
            style_details_for_prompt = (
                f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äì –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–æ–±—Ä–∞–≤ –¥–ª—è –Ω–µ–≥–æ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å—Ç–∏–ª—å, "
                f"—É—á–∏—Ç—ã–≤–∞—è, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ: '{addressee_description_if_auto}'.\n"
                f"–û—Ä–∏–µ–Ω—Ç–∏—Ä—É–π—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∏–ª–∏ –∏ –∏—Ö –∫–ª—é—á–µ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n"
                f"1. –î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å: –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π, —Å—É—Ö–æ–π, –±–µ–∑—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω, —á—ë—Ç–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –ª–æ–≥–∏–∫–∞, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –≤–æ–∑–º–æ–∂–Ω—ã –∫–ª–∏—à–µ.\n"
                f"2. –£—á–µ–±–Ω—ã–π —Å—Ç–∏–ª—å: –≤–µ–∂–ª–∏–≤—ã–π, —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ-–¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π, —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏, —á—ë—Ç–∫–∞—è –∏ –ª–æ–≥–∏—á–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –º—ã—Å–ª–µ–π, –º–∏–Ω–∏–º—É–º '–≤–æ–¥—ã', –±–µ–∑ –∂–∞—Ä–≥–æ–Ω–∞ –∏ –∏–∑–ª–∏—à–Ω–∏—Ö —ç–º–æ—Ü–∏–π.\n"
                f"3. –°—Ç–∏–ª—å –ª–∏—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è: –¥—É—à–µ–≤–Ω—ã–π, –ø–æ–º–æ–≥–∞–µ—Ç –¥–µ–ª–∏–∫–∞—Ç–Ω–æ –≤—ã—Ä–∞–∑–∏—Ç—å —ç–º–æ—Ü–∏–∏, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, –Ω–æ —Ç–æ—á–Ω—ã–π –∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–π, –¥–æ–ø—É—Å—Ç–∏–º—ã —É–º–µ—Å—Ç–Ω—ã–µ —ç–º–æ–¥–∑–∏.\n"
                f"4. –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: –ø–æ–Ω—è—Ç–Ω—ã–π, –∫–æ—Ä–æ—Ç–∫–∏–π, –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π, —Å–æ—Ö—Ä–∞–Ω—è—é—â–∏–π —Å—É—Ç—å.\n\n"
                f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞—Ç–∞, –≤—ã–±–µ—Ä–∏ –Ω–∞–∏–ª—É—á—à–∏–π –∏–∑ —ç—Ç–∏—Ö —Å—Ç–∏–ª–µ–π (–∏–ª–∏ –∏—Ö —É–º–µ—Å—Ç–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ) –∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–∏–º."
            )
            final_message_prefix = f"–ù–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç (—Å—Ç–∏–ª—å –ø–æ–¥–æ–±—Ä–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è '{addressee_description_if_auto}'):"
        
        elif chosen_style_callback and chosen_style_callback != "style_auto":
            style_specific_instruction = ""
            if chosen_style_callback == "style_business": 
                style_specific_instruction = """–ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—è—Å—å —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –¥–µ–ª–æ–≤–æ–≥–æ —Å—Ç–∏–ª—è:
1. –¢–æ–Ω: –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π, —Å—É—Ö–æ–π, –±–µ–∑—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π.
2. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: –æ–±–µ—Å–ø–µ—á—å —á—ë—Ç–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –ª–æ–≥–∏–∫—É –∏–∑–ª–æ–∂–µ–Ω–∏—è, –∏–∑–±–µ–≥–∞–π –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤ –∏ '–≤–æ–¥—ã'.
3. –õ–µ–∫—Å–∏–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—É—é –ª–µ–∫—Å–∏–∫—É, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω—è–π —É–º–µ—Å—Ç–Ω—ã–µ —Ä–µ—á–µ–≤—ã–µ –∫–ª–∏—à–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´—Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏¬ª, ¬´–ø—Ä–æ—Å–∏–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å¬ª, ¬´–¥–æ–≤–æ–¥–∏–º –¥–æ –≤–∞—à–µ–≥–æ —Å–≤–µ–¥–µ–Ω–∏—è¬ª).
4. –ò—Å–∫–ª—é—á–∏—Ç—å: –ø—Ä–æ—Å—Ç–æ—Ä–µ—á–∏—è, –∂–∞—Ä–≥–æ–Ω, –¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å, —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω—ã–µ –æ—Ü–µ–Ω–æ—á–Ω—ã–µ —Å—É–∂–¥–µ–Ω–∏—è –∏ –ª—é–±—É—é –∏–∑–ª–∏—à–Ω—é—é —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å."""
            elif chosen_style_callback == "style_academic": 
                style_specific_instruction = """–ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—è—Å—å —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —É—á–µ–±–Ω–æ–≥–æ —Å—Ç–∏–ª—è:
1. –¢–æ–Ω: –≤–µ–∂–ª–∏–≤—ã–π, —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π, –Ω–æ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π, —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º—É–ª—ã –≤–µ–∂–ª–∏–≤–æ—Å—Ç–∏ —Ç–∏–ø–∞ ¬´–î–æ–±—Ä—ã–π –¥–µ–Ω—å¬ª, ¬´–ü—Ä–æ—à—É —É—Ç–æ—á–Ω–∏—Ç—å¬ª, ¬´–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –æ—Ç–≤–µ—Ç¬ª).
2. –Ø—Å–Ω–æ—Å—Ç—å –∏ –ª–æ–≥–∏–∫–∞: –æ–±–µ—Å–ø–µ—á—å —á—ë—Ç–∫—É—é –∏ –ª–æ–≥–∏—á–Ω—É—é —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É –º—ã—Å–ª–µ–π, –∞–∫—Ü–µ–Ω—Ç–∏—Ä—É–π –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —è—Å–Ω–æ—Å—Ç–∏ –∏–∑–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–π –æ–±–æ—Ä–æ—Ç—ã ¬´–≤ —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º, –ø—Ä–µ–¥–ª–∞–≥–∞—é‚Ä¶¬ª, ¬´—Å—á–∏—Ç–∞—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º —É—Ç–æ—á–Ω–∏—Ç—å‚Ä¶¬ª).
3. –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: –º–∏–Ω–∏–º—É–º '–≤–æ–¥—ã' –∏ –º–∞–∫—Å–∏–º—É–º —Å–º—ã—Å–ª–∞.
4. –ò—Å–∫–ª—é—á–∏—Ç—å: –∂–∞—Ä–≥–æ–Ω, —Ñ–∞–º–∏–ª—å—è—Ä–Ω–æ—Å—Ç—å, –∏–∑–ª–∏—à–Ω—é—é —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–µ—É–º–µ—Å—Ç–Ω—ã–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è.
5. –û—Ç–ª–∏—á–∏–µ –æ—Ç –¥–µ–ª–æ–≤–æ–≥–æ —Å—Ç–∏–ª—è: —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º—è–≥—á–µ –∏ –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–º, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∏ —ç—Ç–æ–º —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ –∑–≤—É—á–∞–Ω–∏–µ –∏ —É–≤–∞–∂–µ–Ω–∏–µ."""
            elif chosen_style_callback == "style_personal": 
                style_specific_instruction = """–ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—è—Å—å —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —Å—Ç–∏–ª—è –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è:
1. –¶–µ–ª—å: —Å–æ–∑–¥–∞—Ç—å –¥—É—à–µ–≤–Ω–æ–µ –∏ —Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –¥–ª—è –±–ª–∏–∑–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (–¥—Ä—É–≥–∞, –ø–∞—Ä—Ç–Ω–µ—Ä–∞, —á–ª–µ–Ω–∞ —Å–µ–º—å–∏).
2. –≠–º–æ—Ü–∏–∏: –ø–æ–º–æ–≥–∏ –¥–µ–ª–∏–∫–∞—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É –≤—ã—Ä–∞–∑–∏—Ç—å —ç–º–æ—Ü–∏–∏, –∫–∞–∫ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ª—é–±–æ–≤—å, –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å), —Ç–∞–∫ –∏ —Å–ª–æ–∂–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±–∏–¥–∞, —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ).
3. –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–µ, –ø–æ–º–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —á—Ç–æ–±—ã –º—ã—Å–ª—å –±—ã–ª–∞ –ø–æ–Ω—è—Ç–Ω–∞.
4. –°—Ç–∏–ª—å —Ä–µ—á–∏: —Ä–µ—á—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π, —á–∏—Å—Ç–æ–π –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ–π, —á–µ–º –æ–±—ã—á–Ω–∞—è —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è. "–ú—è–≥–∫–∏–µ" —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ –∏ —É–º–µ—Å—Ç–Ω—ã–µ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É —ç–º–æ–¥–∑–∏ –¥–æ–ø—É—Å—Ç–∏–º—ã.
5. –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, –ø—Ä–∏–∑–Ω–∞–Ω–∏—è, —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –≤ —Å–ø–æ—Ä–µ, –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å–≤–æ–µ–π –ø–æ–∑–∏—Ü–∏–∏ –±–µ–∑ –∂–µ–ª–∞–Ω–∏—è –æ–±–∏–¥–µ—Ç—å –∏–ª–∏, –Ω–∞–æ–±–æ—Ä–æ—Ç, –¥–ª—è —Ç–≤–µ—Ä–¥–æ–≥–æ –µ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è."""
            elif chosen_style_callback == "style_simplified": 
                style_specific_instruction = """—Å–ª–µ–¥—É—è –ø—Ä–∏–Ω—Ü–∏–ø–∞–º —É–ø—Ä–æ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞:
1. –¶–µ–ª—å: –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –ø–æ–Ω—è—Ç–Ω–æ–µ, –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–±—Ä–∞–≤ –∏–∑–ª–∏—à–Ω—é—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å.
2. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: –∏–∑–±–∞–≤—å—Å—è –æ—Ç —Ç—è–∂–µ–ª—ã—Ö –∏ –Ω–∞–≥—Ä–æ–º–æ–∂–¥–µ–Ω–Ω—ã—Ö –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∏ "—É—á–∏—Ç—ã–≤–∞—è –∏–∑–ª–æ–∂–µ–Ω–Ω–æ–µ, –º–æ–∂–Ω–æ –∑–∞–∫–ª—é—á–∏—Ç—å" –Ω–∞ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—É—é —Ñ—Ä–∞–∑—É).
3. –°–ª–æ–≤–∞—Ä—å: –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Å—Ç—ã–µ —Å–ª–æ–≤–∞, –∏–∑–±–µ–≥–∞–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∏–ª–∏ —Å–ª–æ–∂–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å–º—ã—Å–ª–∞.
4. –°—Ç—Ä—É–∫—Ç—É—Ä–∞: —Å—Ç—Ä–µ–º–∏—Å—å –∫ –∫–æ—Ä–æ—Ç–∫–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –∏ –ø–æ–Ω—è—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∏–∑–ª–æ–∂–µ–Ω–∏—è –º—ã—Å–ª–µ–π.
5. –†–µ–∑—É–ª—å—Ç–∞—Ç: —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º, —á–µ–ª–æ–≤–µ—á–Ω—ã–º, –ª–µ–≥–∫–∏–º –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è, –ø—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—è—è –≤—Å—é –∫–ª—é—á–µ–≤—É—é —Å—É—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
            
            style_details_for_prompt = f"–ü—Ä–∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ {style_specific_instruction}."
            final_message_prefix = f"–ù–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç (—Å—Ç–∏–ª—å {chosen_style_callback}):"
        else: 
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è regenerate_text.")
            await query.edit_message_text(text="–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ: /start")
            return ConversationHandler.END

        # –û–±—â–∞—è —á–∞—Å—Ç—å –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –ø—Ä—è–º—ã—Ö —Å—Ç–∏–ª–µ–π
        prompt_for_gemini = (
            f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç. "
            f"{style_details_for_prompt} " # style_details_for_prompt —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
            f"–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –ø–æ–ª–Ω—ã–π —Å–º—ã—Å–ª –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ê–ë–°–û–õ–Æ–¢–ù–û –¢–û–ß–ù–û, –±–µ–∑ –º–∞–ª–µ–π—à–∏—Ö –∏—Å–∫–∞–∂–µ–Ω–∏–π, –ø–æ—Ç–µ—Ä—å –∫–ª—é—á–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–º—ã—Å–ª–∞. "
            f"–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è: \"{original_text}\"\n\n"
            f"–¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –∏ –¢–û–õ–¨–ö–û –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. "
            f"–ù–ï –î–û–ë–ê–í–õ–Ø–ô –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π, –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π, –æ–±—ä—è—Å–Ω–µ–Ω–∏–π —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π, –∏–∑–≤–∏–Ω–µ–Ω–∏–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–π –∏–ª–∏ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥—Ä—É–≥–∏—Ö —Ñ—Ä–∞–∑, –∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."
        )
    else: # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ post_processing_action: {action_choice}")
        await query.edit_message_text(text=f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {action_choice}. –ó–∞–≤–µ—Ä—à–∞—é –¥–∏–∞–ª–æ–≥.")
        return ConversationHandler.END

    # --- –û–±—â–∏–π –±–ª–æ–∫ –≤—ã–∑–æ–≤–∞ Gemini –¥–ª—è adjust_* –∏ regenerate_text ---
    logger.info(f"–ü—Ä–æ–º–ø—Ç –¥–ª—è Gemini ({action_choice}): {prompt_for_gemini[:500]}...") # –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å –¥–ª–∏–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
    await context.bot.send_chat_action(chat_id=update.effective_chat.id, action="typing")

    if not GEMINI_API_KEY:
        logger.error(f"GEMINI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è post_processing_action ({action_choice}).")
        await context.bot.edit_message_text(text="–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞. –ö–ª—é—á API –Ω–µ –Ω–∞–π–¥–µ–Ω.", chat_id=query.message.chat_id, message_id=query.message.message_id)
        return ConversationHandler.END
    
    try:
        new_response_text = gemini_api.ask_gemini(prompt_for_gemini, GEMINI_API_KEY)
        await _send_post_processing_menu(query, context, new_response_text, final_message_prefix)
        logger.info(f"–¢–µ–∫—Å—Ç –¥–æ—Ä–∞–±–æ—Ç–∞–Ω/–ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω ({action_choice}). –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç: {new_response_text[:50]}...")
        return POST_PROCESSING_MENU

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ gemini_api.ask_gemini –≤ post_processing_action ({action_choice}): {e}", exc_info=True)
        await context.bot.edit_message_text(
            text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Ä–∞–±–æ—Ç–∫–µ/–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            chat_id=query.message.chat_id,
            message_id=query.message.message_id
        )
        return ConversationHandler.END

async def cancel_conversation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.callback_query:
        await update.callback_query.answer()
        try:
            await update.callback_query.edit_message_text("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –æ—Ç–ø—Ä–∞–≤—å /start.")
        except Exception: 
            await context.bot.send_message(chat_id=update.effective_chat.id, text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –æ—Ç–ø—Ä–∞–≤—å /start.")
    elif update.message: 
        await update.message.reply_text("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ /start.")
    context.user_data.clear()
    return ConversationHandler.END

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(f"–ë–æ—Ç –æ–Ω–ª–∞–π–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! Health check —Å–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω.")

def main() -> None:
    if not TELEGRAM_TOKEN:
        logger.critical("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω.")
        return

    logger.info("–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–æ—Ç–∞...")
    start_health_check_server_in_thread()
    
    application = Application.builder().token(TELEGRAM_TOKEN).build()
    
    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(request_text_for_correction, pattern='^start_correction$')],
        states={
            GET_TEXT_FOR_CORRECTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, received_text_for_correction)],
            CHOOSE_STYLE: [CallbackQueryHandler(style_chosen, pattern='^style_(business|academic|personal|simplified|auto)$')],
            DESCRIBE_ADDRESSEE: [MessageHandler(filters.TEXT & ~filters.COMMAND, addressee_described)],
            POST_PROCESSING_MENU: [ 
                CallbackQueryHandler(post_processing_action, pattern='^(adjust_(softer|harder|more_formal)|regenerate_text|start_new_text)$')
            ],
        },
        fallbacks=[CommandHandler('cancel', cancel_conversation)],
    )
    
    application.add_handler(conv_handler)
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("status", status))
    
    logger.info("–ë–æ—Ç Telegram —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ –æ–ø—Ä–æ—Å–∞...")
    try:
        application.run_polling()
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ Telegram-–±–æ—Ç–∞: {e}", exc_info=True)
    finally:
        logger.info("–ë–æ—Ç Telegram –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

if __name__ == "__main__":
    main()